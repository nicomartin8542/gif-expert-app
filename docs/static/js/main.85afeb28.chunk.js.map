{"version":3,"sources":["components/AddCategory.jsx","config/axios.js","helpers/getGfis.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useAxiosGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setcategorias","setOffset","offset","categorias","useState","inputValue","setinputValue","error","setError","onSubmit","e","preventDefault","trim","length","some","cat","toLowerCase","type","value","onChange","target","placeholder","className","onClick","ClientAxios","axios","create","baseURL","process","getGifs","categoria","a","query","respuesta","data","map","id","title","url","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setstate","useEffect","then","useAxiosGifs","gifs","gif","GifExpertApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85afeb28.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({setcategorias, setOffset, offset, categorias}) => {\r\n\t//State local\r\n\tconst [inputValue, setinputValue] = useState(\"\");\r\n\tconst [error, setError] = useState(false);\r\n\r\n\t//Cambio el valor\r\n\tconst handleChange = (e) => {\r\n\t\tsetinputValue(e.target.value);\r\n\t};\r\n\r\n\t//HandleSubmit\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\t//Valido que no este vacio\r\n\t\tif (inputValue.trim().length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Valido que no este repetido\r\n\t\tconst existeCat = categorias.some(\r\n\t\t\t(cat) => cat.toLowerCase() === inputValue.toLowerCase(),\r\n\t\t);\r\n\t\tif (existeCat) {\r\n\t\t\tsetError(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetcategorias([inputValue, ...categorias]);\r\n\t\tsetError(false);\r\n\t\tsetinputValue(\"\");\r\n\t\tsetOffset(9);\r\n\t};\r\n\r\n\t//Actualiso offset\r\n\tconst handleClick = () => {\r\n\t\tconst addOffset = offset + 10;\r\n\t\tsetOffset(addOffset);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t{error && <p>La categoria ingresada ya existe</p>}\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={inputValue}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tplaceholder=\"Agregue una categoria\"\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t\t<button className=\"boton\" onClick={handleClick}>\r\n\t\t\t\tActualizar\r\n\t\t\t</button>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nAddCategory.propTypes = {\r\n\tsetcategorias: PropTypes.func.isRequired,\r\n\tcategorias: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","import axios from \"axios\";\r\nconst ClientAxios = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n});\r\n\r\nexport default ClientAxios;\r\n","import ClientAxios from \"../config/axios\";\r\n\r\n//Get Gifs\r\nexport const getGifs = async (categoria, offset) => {\r\n\tconst apiKey = process.env.REACT_APP_API_KEY;\r\n\tconst query = `search?api_key=${apiKey}&q=${categoria}&limit=8&offset=${offset}`;\r\n\tconst respuesta = await ClientAxios(query);\r\n\tconst data = respuesta.data.data.map((data) => ({\r\n\t\tid: data.id,\r\n\t\ttitle: data.title,\r\n\t\turl: data.images.downsized_medium.url,\r\n\t}));\r\n\r\n\t//Valido encuentre algo\r\n\tif (!data) return null;\r\n\r\n\treturn data;\r\n};\r\n","import React from \"react\";\r\n\r\nconst GifGridItem = ({id, title, url}) => (\r\n\t<div className=\"card no-margen-inferior animate__animated animate__fadeIn animate__delay-0.5s \">\r\n\t\t<img key={id} src={url} alt={title} className=\"img-height-150\" />\r\n\t\t<p className=\"text-center text-bold no-margen-superior\">{title}</p>\r\n\t</div>\r\n);\r\n\r\nexport default GifGridItem;\r\n","import React from \"react\";\r\nimport {useAxiosGifs} from \"../hooks/useAxiosGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({categoria, offset}) => {\r\n\tconst {data: gifs, loading} = useAxiosGifs(categoria, offset);\r\n\r\n\treturn (\r\n\t\t<div className=\"grid col-1\">\r\n\t\t\t<div className=\"span-1\">\r\n\t\t\t\t<h3 className=\"display-3 sm-display-3  no-margen-inferior sm-text-center\">\r\n\t\t\t\t\t{categoria}\r\n\t\t\t\t</h3>\r\n\t\t\t\t{loading && (\r\n\t\t\t\t\t<p className=\"animate__animated animate__flash\">Cargando....</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"grid col-4 med-col-2 sm-col-1\">\r\n\t\t\t\t{gifs.map((gif) => (\r\n\t\t\t\t\t<GifGridItem key={gif.id} {...gif} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GifGrid;\r\n","import {useEffect, useState} from \"react\";\r\nimport {getGifs} from \"../helpers/getGfis\";\r\n\r\nexport const useAxiosGifs = (categoria, offset = 0) => {\r\n\tconst [state, setstate] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\t//Use Effect para traer los gifs\r\n\tuseEffect(() => {\r\n\t\tgetGifs(categoria, offset).then((data) => {\r\n\t\t\tsetstate({\r\n\t\t\t\tdata,\r\n\t\t\t\tloading: false,\r\n\t\t\t});\r\n\t\t});\r\n\t}, [categoria, offset]);\r\n\r\n\treturn state;\r\n};\r\n","import React, {useState} from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\t//Declaro state del componente\r\n\tconst [categorias, setcategorias] = useState([]);\r\n\tconst [offset, setOffset] = useState(9);\r\n\r\n\treturn (\r\n\t\t<div className=\"contenedor\">\r\n\t\t\t<h2 className=\"display-2 sm-display-2\">Gifs Exporte App</h2>\r\n\r\n\t\t\t<AddCategory\r\n\t\t\t\tsetcategorias={setcategorias}\r\n\t\t\t\tcategorias={categorias}\r\n\t\t\t\toffset={offset}\r\n\t\t\t\tsetOffset={setOffset}\r\n\t\t\t/>\r\n\t\t\t<hr />\r\n\r\n\t\t\t{categorias.length === 0 ? (\r\n\t\t\t\t<h1 className=\"display-3 sm-display-3 text-center sm-text-left margen-superior\">\r\n\t\t\t\t\tIngrese una categoria\r\n\t\t\t\t</h1>\r\n\t\t\t) : (\r\n\t\t\t\tcategorias.map((cat) => (\r\n\t\t\t\t\t<GifGrid key={cat} categoria={cat} offset={offset} />\r\n\t\t\t\t))\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"animate.css\";\r\nimport \"./index.css\";\r\nimport GifExpertApp from \"./GifExpertApp\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<GifExpertApp />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}